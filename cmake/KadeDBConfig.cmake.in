@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

# Find required dependencies
find_dependency(Threads REQUIRED)
find_dependency(OpenSSL REQUIRED)
find_dependency(RocksDB REQUIRED)
find_dependency(ANTLR4 REQUIRED)

# Import targets
include("${CMAKE_CURRENT_LIST_DIR}/KadeDBTargets.cmake")

# Version information
set(KadeDB_VERSION @PROJECT_VERSION@)
set(KadeDB_VERSION_MAJOR @PROJECT_VERSION_MAJOR@)
set(KadeDB_VERSION_MINOR @PROJECT_VERSION_MINOR@)
set(KadeDB_VERSION_PATCH @PROJECT_VERSION_PATCH@)
set(PACKAGE_VERSION @PROJECT_VERSION@)

# Check if the requested version is compatible
if("${PACKAGE_VERSION}" VERSION_LESS ${PACKAGE_FIND_VERSION})
  set(PACKAGE_VERSION_COMPATIBLE FALSE)
else()
  set(PACKAGE_VERSION_COMPATIBLE TRUE)
  if("${PACKAGE_FIND_VERSION}" STREQUAL "${PACKAGE_VERSION}")
    set(PACKAGE_VERSION_EXACT TRUE)
  endif()

  # Check that the target exists
  if(NOT TARGET KadeDB::Core)
    if(NOT KadeDB_FIND_QUIETLY)
      message(WARNING "KadeDB::Core target not found in KadeDB package")
    endif()
    return()
  endif()

  # Provide legacy variables for backward compatibility
  get_target_property(KadeDB_INCLUDE_DIRS KadeDB::Core INTERFACE_INCLUDE_DIRECTORIES)
  get_target_property(KadeDB_LIBRARIES KadeDB::Core IMPORTED_LOCATION_RELEASE)
  if(NOT KadeDB_LIBRARIES)
    get_target_property(KadeDB_LIBRARIES KadeDB::Core IMPORTED_LOCATION_DEBUG)
  endif()
endif()

# Add KadeDB modules path to CMAKE_MODULE_PATH
list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/../")

# Export variables
set(KADEDB_INCLUDE_DIRS "@CMAKE_INSTALL_PREFIX@/include")
set(KADEDB_LIBRARIES "@PROJECT_NAME@::@PROJECT_NAME@")

# Handle find_package() arguments
include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(@PROJECT_NAME@
  FOUND_VAR @PROJECT_NAME@_FOUND
  REQUIRED_VARS KADEDB_INCLUDE_DIRS KADEDB_LIBRARIES
  VERSION_VAR @PROJECT_VERSION@
)

# Create imported targets for easier consumption
if(NOT TARGET @PROJECT_NAME@::@PROJECT_NAME@)
  add_library(@PROJECT_NAME@::@PROJECT_NAME@ INTERFACE IMPORTED)
  set_target_properties(@PROJECT_NAME@::@PROJECT_NAME@ PROPERTIES
    INTERFACE_INCLUDE_DIRECTORIES "${KADEDB_INCLUDE_DIRS}"
    INTERFACE_LINK_LIBRARIES "${KADEDB_LIBRARIES}"
  )
endif()
